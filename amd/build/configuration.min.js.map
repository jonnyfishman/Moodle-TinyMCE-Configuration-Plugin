{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media Manager configuration.\n *\n * @module      tiny_configurator/configuration\n * @copyright   2022, Stevani Andolo  <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import {accessbilityButtonName} from './common';\n\nimport {\n  removeToolbarButton,\n  addToolbarButton,\n  addMenubarItem\n} from 'editor_tiny/utils';\n\nimport {component} from './common';\n\nexport const configure = async (instanceConfig) => {\n\n  // use async IIFE to wait for object elements to be added\n  const pluginParams = await (async () => {\n    const pluginName = `${component}/plugin:data`;\n\n    while (!instanceConfig[pluginName]) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    return instanceConfig[pluginName].params;\n  })();\n\n  // could this be sped up by removing elements from params as they are used?\n\n  // remove toolbar items\n  const buttonsToRemove = pluginParams.disabledToolbarButtons.split(' ');\n  buttonsToRemove.forEach(button => {\n\n    if( button.includes(\":\") ) { // remove button\n      const parts = button.split(':');\n      instanceConfig.toolbar = removeToolbarButton(instanceConfig.toolbar, parts[0], parts[1]);\n\n    } else { // remove button menu\n      instanceConfig.toolbar = instanceConfig.toolbar.filter(function (toolbarItem) {\n          return toolbarItem.name !== button;\n      });\n\n    }\n  });\n\n// add toolbar items\nconst buttonsToAdd = pluginParams.addToolbarButtons.split(' ');\ninstanceConfig.toolbar.forEach((toolbar, index) => {\n\n  buttonsToAdd.forEach(button => {\n    let name,item;\n\n    if ( button.includes(\":\") ) {\n      const parts = button.split(':');\n      name = parts[0];\n      item = parts[1];\n    }\n    else {\n      name = button;\n    }\n\n    if ( toolbar.name === name ) {\n      instanceConfig.toolbar = addToolbarButton(instanceConfig.toolbar, name, item);\n    } else if ( index === instanceConfig.toolbar.length - 1 ) {\n      instanceConfig.toolbar.push({\n        name: button,\n        items: []\n      });\n    }\n  });\n\n});\n\n// remove menu items\nconst menusToRemove = pluginParams.disabledMenuItems.split(' ');\n\nmenusToRemove.forEach(menuName => {\n\n  if( menuName.includes(\":\") ) { // remove menu item\n    const parts = menuName.split(':');\n    instanceConfig.menu[parts[0]].items = instanceConfig.menu[parts[0]].items.replace(parts[1], '');\n\n  } else { // remove menu\n    for (const name in instanceConfig.menu) {\n      if (instanceConfig.menu[name] === menuName) {\n        delete instanceConfig.menu[name];\n        break;\n      }\n    }\n  }\n});\n\n  // add menu items\n  const menuToAdd = pluginParams.addMenuItems.split(' ');\n\n  menuToAdd.forEach(menuItem => {\n    let section,item;\n    console.log(menuItem);\n    if ( menuItem.includes(\":\") ) {\n      const parts = menuItem.split(':');\n      section = parts[0];\n      item = ' ' + parts[1];\n    }\n    else {\n      section = menuItem;\n      item = '';\n    }\n\n    instanceConfig.menu = addMenubarItem(instanceConfig.menu, section, item);\n  });\n\n  // remove quickbar items\n  const quickbarToRemove = pluginParams.quickbarsSelectionToolbar.split(' ');\n\n  quickbarToRemove.forEach(button => {\n    const escapedButton = button.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    instanceConfig.quickbars_selection_toolbar = instanceConfig.quickbars_selection_toolbar.replace(\n      new RegExp(escapedButton, 'g'), ''\n    );\n  });\n\n  // add quickbar items\n  const quickbarToAdd = pluginParams.addQuickbarsSelectionToolbar.split(' ');\n\n  quickbarToAdd.forEach(button => {\n    instanceConfig.quickbars_selection_toolbar += ' ' + button;\n  });\n  // These come from editor.js in parent\n  /*\n  // This could be tweaked to change the colours to match the theme etc.\n  if (instanceConfig.menu.format) {\n      instanceConfig.menu.format.items = instanceConfig.menu.format.items\n          // Remove forecolor and backcolor.\n          .replace(/forecolor ?/, '')\n          .replace(/backcolor ?/, '')\n\n          // Remove fontfamily for now.\n          .replace(/fontfamily ?/, '')\n\n          // Remove fontsize for now.\n          .replace(/fontsize ?/, '')\n\n          // Remove styles - it just duplicates the format menu in a way which does not respect configuration\n          .replace(/styles ?/, '')\n\n          // Remove any duplicate separators.\n          .replaceAll(/\\| *\\|/g, '|');\n  }\n  */\n\n  console.log(instanceConfig);\n  return instanceConfig;\n\n};\n"],"names":["async","pluginParams","pluginName","component","instanceConfig","Promise","resolve","setTimeout","params","disabledToolbarButtons","split","forEach","button","includes","parts","toolbar","filter","toolbarItem","name","buttonsToAdd","addToolbarButtons","index","item","length","push","items","disabledMenuItems","menuName","menu","replace","addMenuItems","menuItem","section","console","log","quickbarsSelectionToolbar","escapedButton","quickbars_selection_toolbar","RegExp","addQuickbarsSelectionToolbar"],"mappings":"4NAiCyBA,6BAGjBC,kBAAqB,iBACnBC,qBAAgBC,wCAEdC,eAAeF,mBACf,IAAIG,SAAQC,SAAWC,WAAWD,QAAS,cAG5CF,eAAeF,YAAYM,MAPT,EAAA,GAaHP,aAAaQ,uBAAuBC,MAAM,KAClDC,SAAQC,YAElBA,OAAOC,SAAS,KAAO,OACnBC,MAAQF,OAAOF,MAAM,KAC3BN,eAAeW,SAAU,8BAAoBX,eAAeW,QAASD,MAAM,GAAIA,MAAM,SAGrFV,eAAeW,QAAUX,eAAeW,QAAQC,QAAO,SAAUC,oBACtDA,YAAYC,OAASN,mBAOhCO,aAAelB,aAAamB,kBAAkBV,MAAM,KAC1DN,eAAeW,QAAQJ,SAAQ,CAACI,QAASM,SAEvCF,aAAaR,SAAQC,aACfM,KAAKI,QAEJV,OAAOC,SAAS,KAAO,OACpBC,MAAQF,OAAOF,MAAM,KAC3BQ,KAAOJ,MAAM,GACbQ,KAAOR,MAAM,QAGbI,KAAON,OAGJG,QAAQG,OAASA,KACpBd,eAAeW,SAAU,2BAAiBX,eAAeW,QAASG,KAAMI,MAC9DD,QAAUjB,eAAeW,QAAQQ,OAAS,GACpDnB,eAAeW,QAAQS,KAAK,CAC1BN,KAAMN,OACNa,MAAO,WAQOxB,aAAayB,kBAAkBhB,MAAM,KAE7CC,SAAQgB,cAEhBA,SAASd,SAAS,KAAO,OACrBC,MAAQa,SAASjB,MAAM,KAC7BN,eAAewB,KAAKd,MAAM,IAAIW,MAAQrB,eAAewB,KAAKd,MAAM,IAAIW,MAAMI,QAAQf,MAAM,GAAI,aAGvF,MAAMI,QAAQd,eAAewB,QAC5BxB,eAAewB,KAAKV,QAAUS,SAAU,QACnCvB,eAAewB,KAAKV,gBAQfjB,aAAa6B,aAAapB,MAAM,KAExCC,SAAQoB,eACZC,QAAQV,QACZW,QAAQC,IAAIH,UACPA,SAASlB,SAAS,KAAO,OACtBC,MAAQiB,SAASrB,MAAM,KAC7BsB,QAAUlB,MAAM,GAChBQ,KAAO,IAAMR,MAAM,QAGnBkB,QAAUD,SACVT,KAAO,GAGTlB,eAAewB,MAAO,yBAAexB,eAAewB,KAAMI,QAASV,KAAnE,IAIuBrB,aAAakC,0BAA0BzB,MAAM,KAErDC,SAAQC,eACjBwB,cAAgBxB,OAAOiB,QAAQ,sBAAuB,QAC5DzB,eAAeiC,4BAA8BjC,eAAeiC,4BAA4BR,QACtF,IAAIS,OAAOF,cAAe,KAAM,GADlC,WAMoBnC,aAAasC,6BAA6B7B,MAAM,KAExDC,SAAQC,SACpBR,eAAeiC,6BAA+B,IAAMzB,MAApD,IAyBFqB,QAAQC,IAAI9B,gBACLA,cAAP"}