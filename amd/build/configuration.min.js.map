{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media Manager configuration.\n *\n * @module      tiny_configurator/configuration\n * @copyright   2022, Stevani Andolo  <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import {accessbilityButtonName} from './common';\n/*\nimport {\n  removeMenubarItem\n} from 'editor_tiny/utils';\n*/\nimport {component} from './common';\n\nexport const configure = async (instanceConfig) => {\n\n  console.log(instanceConfig);\n  // use async IIFE to wait for object elements to be added\n  const pluginParams = await (async () => {\n    const pluginName = `${component}/plugin:data`;\n\n    while (!instanceConfig[pluginName]) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    return instanceConfig[pluginName].params;\n  })();\n  console.log('after', instanceConfig);\n  // remove toolbar items\n  const buttonsToRemove = pluginParams.disabledToolbarButtons.split(' ');\n  buttonsToRemove.forEach(button => {\n\n    if( button.includes(\"[\") ) { // remove top level button\n      instanceConfig.toolbar = instanceConfig.toolbar.filter(function(item) {\n        return item.name !== button.replace(/[\\[\\]]/g, '');\n      });\n    } else { // remove button\n      instanceConfig.toolbar.forEach(function (element) {\n        element.items = element.items.filter(function (item) {\n          return item !== button;\n        });\n      });\n    }\n  });\n\n  // remove menu items\n  const menusToRemove = pluginParams.disabledMenuItems.split(' ');\n  console.log(menusToRemove);\n  menusToRemove.forEach(menuName => {\n\n    if( menuName.includes(\":\") ) { // remove top level button\n      const parts = menuName.split(':');\n      instanceConfig.menu[parts[0]].items = instanceConfig.menu[parts[0]].items.replace(parts[1], '');\n\n    } else { // remove button\n      instanceConfig.menu = instanceConfig.menu.filter(function(item) {\n        return item.title !== menuName;\n      });\n    }\n  });\n\n  // These come from editor.js in parent\n  /*\n  // This could be tweaked to change the colours to match the theme etc.\n  if (instanceConfig.menu.format) {\n      instanceConfig.menu.format.items = instanceConfig.menu.format.items\n          // Remove forecolor and backcolor.\n          .replace(/forecolor ?/, '')\n          .replace(/backcolor ?/, '')\n\n          // Remove fontfamily for now.\n          .replace(/fontfamily ?/, '')\n\n          // Remove fontsize for now.\n          .replace(/fontsize ?/, '')\n\n          // Remove styles - it just duplicates the format menu in a way which does not respect configuration\n          .replace(/styles ?/, '')\n\n          // Remove any duplicate separators.\n          .replaceAll(/\\| *\\|/g, '|');\n  }\n  */\n\n  // This removes a menu item intirely from the menu bar\n  if (instanceConfig.menu.edit) {\n      // instanceConfig.menu.edit.items = '';\n  }\n  console.log(instanceConfig);\n  return instanceConfig;\n\n};\n"],"names":["async","console","log","instanceConfig","pluginParams","pluginName","component","Promise","resolve","setTimeout","params","disabledToolbarButtons","split","forEach","button","includes","toolbar","filter","item","name","replace","element","items","menusToRemove","disabledMenuItems","menuName","parts","menu","title","edit"],"mappings":"iMA+ByBA,MAAAA,iBAEvBC,QAAQC,IAAIC,sBAENC,kBAAqB,iBACnBC,qBAAgBC,wCAEdH,eAAeE,mBACf,IAAIE,SAAQC,SAAWC,WAAWD,QAAS,cAG5CL,eAAeE,YAAYK,QAPT,GAS3BT,QAAQC,IAAI,QAASC,gBAEGC,aAAaO,uBAAuBC,MAAM,KAClDC,SAAQC,SAElBA,OAAOC,SAAS,KAClBZ,eAAea,QAAUb,eAAea,QAAQC,QAAO,SAASC,aACvDA,KAAKC,OAASL,OAAOM,QAAQ,UAAW,OAGjDjB,eAAea,QAAQH,SAAQ,SAAUQ,SACvCA,QAAQC,MAAQD,QAAQC,MAAML,QAAO,SAAUC,aACtCA,OAASJ,sBAOlBS,cAAgBnB,aAAaoB,kBAAkBZ,MAAM,YAC3DX,QAAQC,IAAIqB,eACZA,cAAcV,SAAQY,cAEhBA,SAASV,SAAS,KAAO,OACrBW,MAAQD,SAASb,MAAM,KAC7BT,eAAewB,KAAKD,MAAM,IAAIJ,MAAQnB,eAAewB,KAAKD,MAAM,IAAIJ,MAAMF,QAAQM,MAAM,GAAI,SAG5FvB,eAAewB,KAAOxB,eAAewB,KAAKV,QAAO,SAASC,aACjDA,KAAKU,QAAUH,eA6BxBtB,eAAewB,KAAKE,KAGxB5B,QAAQC,IAAIC,gBACLA"}